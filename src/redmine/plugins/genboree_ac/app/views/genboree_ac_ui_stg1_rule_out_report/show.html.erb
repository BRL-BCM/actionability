<%
  # @todo Report links compare current version to displayed version:

  renderError = false
  if(@kbDoc)
    modelHash = { :docModel => @docModel }

    # Configure Templater options
    # - Standard options but in addition to the obvious @kbDoc that the Templater will specifically get,
    #   we also need to pass in some important instance variables / context info.
    #   . We need to arrange this because the Templater and the underlying template-producer are helper/library classes
    #     completely independent of Rails MVC. They don't magically get access to Controller instance variables
    #     like Rails' Views do!
    opts = {
      :trim => @trim,
      :detailed => @detailed,
      :templateDir => templateGroupDir(:stg1RuleOutRpt, @templateSet ),
      :skipValidation       => true,
      :skipVariabilization  => true, # big speed up
      :context => { # What contextual info do we need to aid rendering? Mainly Controller instance variables
        :viewingHeadVersion => @viewingHeadVersion,
        :viewAcDocVersion   => @acDocVersion,
        :headAcDocVersion   => @headVersionNum,
        :isAcReleaseTrack   => @settingsRec.isAcReleaseTrack,
        :verOrRelLabel      => ( @settingsRec.isAcReleaseTrack ? l(:gbac_label_release) : l(:gbac_label_version) ),
        :gbac_label_release => l(:gbac_label_release),
        :releaseKbBaseUrl   => @settingsRec.releaseKbBaseUrl,
        :requestUrl         => request.url
      }
    }
    begin
      # Core doc content via templates
      templater = GenboreeAcTemplaters::Stg1RuleoutReportTemplater.new(modelHash, opts)
      docHtml = templater.docHtml(@kbDoc)
      renderError = false
    rescue => err
      renderError = true
      docHtml = %Q^<strong>ERROR:</strong> Rendering the Actionability document with id <strong>'#{@docIdentifier.to_s}'</strong> failed. Cannot it display it here.<br>Possibly there is no <strong>'#{@docIdentifier.to_s}'</strong> in the database, or has content incompatible with the renderer.</span>^
      $stderr.debugPuts(__FILE__, __method__, "ERROR", "Exception rendering doc using templates:\n  Error class: #{err.class}\n  Error message:  #{err.message.inspect}\n  Error trace:\n#{err.backtrace.join("\n")}\n\n")
    end
  else
    renderError = true
    docHtml = %Q^<strong>ERROR:</strong> #{@viewMsg or "Failed to load document data, please contact an Administrator to help track down cause."}^
  end
%>
<% content_for :header_tags do %>
  <% unless( @settingsRec.urlMountDir.blank? ) %>
    <base href="<%= @settingsRec.urlMountDir %>">
  <% end %>
    <script type="text/javascript">
      var kbMount = "<%= @kbMount %>" ;
      /* This is set in the controller. */
      var projectId = '<%= @projectId.to_s.gsub(/'/, "\\\\'").gsub(/\n/, ' ').html_safe %>' ;

      // TEST/EXPLORE: User permission map
      <%# = @userPermsJS %>
    </script>

    <%= stylesheet_link_tag 'stg1RuleOutRpt', :media => 'all', :plugin => 'genboree_ac' %>
    <%= javascript_include_tag 'helpers', :plugin => 'genboree_ac' %>
    <%= javascript_include_tag 'reports', :plugin => 'genboree_ac' %>
<% end %>

<!-- PAGE -->
<div id="page">
  <!-- DOC RENDER -->
  <div id="doc">
    <!-- DOC CONTENT -->
    <% if(renderError) %>
        <%= render :partial => "shared/bsAlert", :locals => { :msgHtml => docHtml }, :object => { :type => 'danger', :classes => 'flashMsg' } %>
    <% else %>
        <%= docHtml.html_safe %>
    <% end %>
  </div>
</div>
