<%
  defaultPluginSettings = Redmine::Plugin.find("genboree_ac").settings[:default]
  $stderr.debugPuts(__FILE__, __method__, "DEBUG", "GENBOREE AC - LAYOUT: defaultPluginSettings: #{defaultPluginSettings.inspect}")
  projId = params['id']
  $stderr.debugPuts(__FILE__, __method__, "DEBUG", "GENBOREE _AC - LAYOUT: projId: #{projId.inspect} ; params:\n\n#{params.inspect}\n\n")
  genboreeAc = GenboreeAc.find_by_project_id(Project.find(projId))
  $stderr.debugPuts(__FILE__, __method__, "DEBUG", "GENBOREE _AC - LAYOUT: genboreeAc (model data for this project):\n\n#{genboreeAc.inspect}\n\n")
  headerFile = genboreeAc.headerIncludeFileLoc.to_s.strip
  footerFile = genboreeAc.footerIncludeFileLoc.to_s.strip
  $stderr.debugPuts(__FILE__, __method__, "DEBUG", "GENBOREE _AC - LAYOUT: header file: #{headerFile.inspect} (exists? #{headerFile.empty? ? 'n/a [none set]' : File.exist?(headerFile)}) ; footer file: #{footerFile.inspect} (exists? #{footerFile.empty? ? 'n/a [none set]' : File.exist?(footerFile)})")
%>
<!DOCTYPE html>
<html lang="<%= current_language %>">
<head>
  <meta charset="utf-8" />
  <title><%=h html_title %></title>
  <meta name="description" content="<%= Redmine::Info.app_name %>" />
  <meta name="keywords" content="issue,bug,tracker" />
  <%# Have Redmine add its authorization token meta tags (and favicon meta tag) %>
  <%= csrf_meta_tag %>
  <%= favicon %>

  <%# Make sure have AC's jquery version (newer than Redmine's) %>
  <%# * Latest bootstrap, if you use it in a View, needs at least jquery 1.9 %>
  <%= javascript_include_tag 'jquery-1.12.min.js', :plugin => 'genboree_ac' %>
  <%# Slightly older jquery-ujs extracted from Redmine's concatenated multi-jquery js file %>
  <%# * Newer jquery-ujs doesn't auto-provide csrf_* globals. They are available via $.rails.csrfToken() and $.rails.csrfParam() %>
  <%= javascript_include_tag 'jquery-ujs-2.0.3.js', :plugin => 'genboree_ac' %>
  
  <%# Load Redmine's application.js for core variables etc %>
  <%= javascript_include_tag 'application.js' %>
  <%# Load Bootstrap related js/css files %>
  <%= javascript_include_tag 'bootstrap-glyph-tips-dialogs.js', :plugin => 'genboree_ac' %>
  <%= javascript_include_tag 'bootstrap-switch.min.js', :plugin => 'genboree_ac' %>
  <%= stylesheet_link_tag 'bootstrap-glyph-tips-dialogs.css', :plugin => 'genboree_ac', :media => 'all' %>
  <%= stylesheet_link_tag 'font-awesome.css', :plugin => 'genboree_ac', :media => 'all' %>
  <%= stylesheet_link_tag 'bootstrap-switch.min.css', :plugin => 'genboree_ac', :media => 'all' %>
  
  <%# Arrange for any <head> content from the specific View (i.e. via this: content_for :header_tags) %>
  <%= yield :header_tags -%>

</head>
<body>
  <%# Insert static header file, if available %>
  <% if(File.exist?(headerFile)) %>
    <%= File.read(headerFile).html_safe %>
  <% end %>
  
  <%# This will be in body %>
  <%# * div#content wraps all View html %>
  <div id="content">
    <%# Arrange to render and insert output of the specific View (whatever that is at the time) %>
    <%= yield %>
    <%= call_hook :view_layouts_base_content %>
    <%# Cleanly end the page with an HTML "blank" line %>
    <div style="clear:both;"></div>
  </div>
  
  <%# Insert static footer file, if available %>
  <% if(File.exist?(footerFile)) %>
    <%= File.read(footerFile).html_safe %>
  <% end %>
</body>
</html>
